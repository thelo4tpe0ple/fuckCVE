/**
* @id cpp/CVE-2022-0847
* @kind problem
* @problem.severity error
* @description 在管道操作过程中，通过特定写入方式覆盖根文件中的权限，造成本地用户获得 root 权限
*/

import cpp
import codeql.dataflow
import codeql.dataflow.simple
class DirtyPipeConfig extends simple::Config {
  override predicate isSource(DataFlow::Node source) {
    exists(FunctionCall f |
      f.getTarget().getName() = "splice" and
      source.asExpr() = f.getArgument(1)
    )
  }

  override predicate isSink(DataFlow::Node sink) {
    exists(FunctionCall f |
      f.getTarget().getName() = "write" and
      sink.asExpr() = f.getArgument(0)
    )
  }
}

from DataFlow::PathNode sourceNode, DataFlow::PathNode sinkNode
where simple::flow(new DirtyPipeConfig(), sourceNode, sinkNode)
select sinkNode.getNode(), "可能存在 Dirty Pipe 漏洞路径：splice → write"